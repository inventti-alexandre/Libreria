<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnProveedoresdevConsig.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>