//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace LaPaz.Win.PragmaService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="webservBinding", Namespace="urn:webserv")]
    public partial class webserv : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GenerarTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback CrearSepelioOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActualizarSepelioOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public webserv() {
            this.Url = global::LaPaz.Win.Properties.Settings.Default.LaPaz_Win_PragmaService_webserv;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GenerarTicketCompletedEventHandler GenerarTicketCompleted;
        
        /// <remarks/>
        public event CrearSepelioCompletedEventHandler CrearSepelioCompleted;
        
        /// <remarks/>
        public event ActualizarSepelioCompletedEventHandler ActualizarSepelioCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.sistemas-aa.com.ar/trabajos/Puntos/webservice/server.php/GenerarTicket" +
            "", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GenerarTicket(string Consulta, int Tipo) {
            object[] results = this.Invoke("GenerarTicket", new object[] {
                        Consulta,
                        Tipo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerarTicketAsync(string Consulta, int Tipo) {
            this.GenerarTicketAsync(Consulta, Tipo, null);
        }
        
        /// <remarks/>
        public void GenerarTicketAsync(string Consulta, int Tipo, object userState) {
            if ((this.GenerarTicketOperationCompleted == null)) {
                this.GenerarTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarTicketOperationCompleted);
            }
            this.InvokeAsync("GenerarTicket", new object[] {
                        Consulta,
                        Tipo}, this.GenerarTicketOperationCompleted, userState);
        }
        
        private void OnGenerarTicketOperationCompleted(object arg) {
            if ((this.GenerarTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarTicketCompleted(this, new GenerarTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.sistemas-aa.com.ar/trabajos/Puntos/webservice/server.php/CrearSepelio", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string CrearSepelio(
                    string Nombre, 
                    [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime FechaFallecimiento, 
                    [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime FechaSepelio, 
                    string HoraInhumacion, 
                    int Localidad, 
                    string NombreLocalidad, 
                    string OtroCementerioCrematorio, 
                    int Sala, 
                    string NombreSala, 
                    [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime FechaMisa, 
                    string HoraMisa, 
                    int IglesiaId, 
                    string NombreIglesia, 
                    string OtroLugarMisa, 
                    int LugarInhumacion, 
                    string NombreLugarInhumacion, 
                    [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime FechaNacimiento, 
                    int OpcionInhumacionCremacion, 
                    int LugarCremacion, 
                    string NombreLugarCremacion, 
                    string NombreOtraSala, 
                    string DomicilioOtraSala, 
                    int IdOracion, 
                    string NombreOracion, 
                    string ContenidoOracion, 
                    int IdCocheria, 
                    string DomicilioSala) {
            object[] results = this.Invoke("CrearSepelio", new object[] {
                        Nombre,
                        FechaFallecimiento,
                        FechaSepelio,
                        HoraInhumacion,
                        Localidad,
                        NombreLocalidad,
                        OtroCementerioCrematorio,
                        Sala,
                        NombreSala,
                        FechaMisa,
                        HoraMisa,
                        IglesiaId,
                        NombreIglesia,
                        OtroLugarMisa,
                        LugarInhumacion,
                        NombreLugarInhumacion,
                        FechaNacimiento,
                        OpcionInhumacionCremacion,
                        LugarCremacion,
                        NombreLugarCremacion,
                        NombreOtraSala,
                        DomicilioOtraSala,
                        IdOracion,
                        NombreOracion,
                        ContenidoOracion,
                        IdCocheria,
                        DomicilioSala});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CrearSepelioAsync(
                    string Nombre, 
                    System.DateTime FechaFallecimiento, 
                    System.DateTime FechaSepelio, 
                    string HoraInhumacion, 
                    int Localidad, 
                    string NombreLocalidad, 
                    string OtroCementerioCrematorio, 
                    int Sala, 
                    string NombreSala, 
                    System.DateTime FechaMisa, 
                    string HoraMisa, 
                    int IglesiaId, 
                    string NombreIglesia, 
                    string OtroLugarMisa, 
                    int LugarInhumacion, 
                    string NombreLugarInhumacion, 
                    System.DateTime FechaNacimiento, 
                    int OpcionInhumacionCremacion, 
                    int LugarCremacion, 
                    string NombreLugarCremacion, 
                    string NombreOtraSala, 
                    string DomicilioOtraSala, 
                    int IdOracion, 
                    string NombreOracion, 
                    string ContenidoOracion, 
                    int IdCocheria, 
                    string DomicilioSala) {
            this.CrearSepelioAsync(Nombre, FechaFallecimiento, FechaSepelio, HoraInhumacion, Localidad, NombreLocalidad, OtroCementerioCrematorio, Sala, NombreSala, FechaMisa, HoraMisa, IglesiaId, NombreIglesia, OtroLugarMisa, LugarInhumacion, NombreLugarInhumacion, FechaNacimiento, OpcionInhumacionCremacion, LugarCremacion, NombreLugarCremacion, NombreOtraSala, DomicilioOtraSala, IdOracion, NombreOracion, ContenidoOracion, IdCocheria, DomicilioSala, null);
        }
        
        /// <remarks/>
        public void CrearSepelioAsync(
                    string Nombre, 
                    System.DateTime FechaFallecimiento, 
                    System.DateTime FechaSepelio, 
                    string HoraInhumacion, 
                    int Localidad, 
                    string NombreLocalidad, 
                    string OtroCementerioCrematorio, 
                    int Sala, 
                    string NombreSala, 
                    System.DateTime FechaMisa, 
                    string HoraMisa, 
                    int IglesiaId, 
                    string NombreIglesia, 
                    string OtroLugarMisa, 
                    int LugarInhumacion, 
                    string NombreLugarInhumacion, 
                    System.DateTime FechaNacimiento, 
                    int OpcionInhumacionCremacion, 
                    int LugarCremacion, 
                    string NombreLugarCremacion, 
                    string NombreOtraSala, 
                    string DomicilioOtraSala, 
                    int IdOracion, 
                    string NombreOracion, 
                    string ContenidoOracion, 
                    int IdCocheria, 
                    string DomicilioSala, 
                    object userState) {
            if ((this.CrearSepelioOperationCompleted == null)) {
                this.CrearSepelioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrearSepelioOperationCompleted);
            }
            this.InvokeAsync("CrearSepelio", new object[] {
                        Nombre,
                        FechaFallecimiento,
                        FechaSepelio,
                        HoraInhumacion,
                        Localidad,
                        NombreLocalidad,
                        OtroCementerioCrematorio,
                        Sala,
                        NombreSala,
                        FechaMisa,
                        HoraMisa,
                        IglesiaId,
                        NombreIglesia,
                        OtroLugarMisa,
                        LugarInhumacion,
                        NombreLugarInhumacion,
                        FechaNacimiento,
                        OpcionInhumacionCremacion,
                        LugarCremacion,
                        NombreLugarCremacion,
                        NombreOtraSala,
                        DomicilioOtraSala,
                        IdOracion,
                        NombreOracion,
                        ContenidoOracion,
                        IdCocheria,
                        DomicilioSala}, this.CrearSepelioOperationCompleted, userState);
        }
        
        private void OnCrearSepelioOperationCompleted(object arg) {
            if ((this.CrearSepelioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CrearSepelioCompleted(this, new CrearSepelioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.sistemas-aa.com.ar/trabajos/Puntos/webservice/server.php/ActualizarSep" +
            "elio", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string ActualizarSepelio(
                    string Nombre, 
                    [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime FechaFallecimiento, 
                    [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime FechaSepelio, 
                    string HoraInhumacion, 
                    int Localidad, 
                    string NombreLocalidad, 
                    string OtroCementerioCrematorio, 
                    int Sala, 
                    string NombreSala, 
                    [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime FechaMisa, 
                    string HoraMisa, 
                    int IglesiaId, 
                    string NombreIglesia, 
                    string OtroLugarMisa, 
                    int LugarInhumacion, 
                    string NombreLugarInhumacion, 
                    [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime FechaNacimiento, 
                    int OpcionInhumacionCremacion, 
                    int LugarCremacion, 
                    string NombreLugarCremacion, 
                    string NombreOtraSala, 
                    string DomicilioOtraSala, 
                    int IdOracion, 
                    string NombreOracion, 
                    string ContenidoOracion, 
                    int IdCocheria, 
                    string DomicilioSala) {
            object[] results = this.Invoke("ActualizarSepelio", new object[] {
                        Nombre,
                        FechaFallecimiento,
                        FechaSepelio,
                        HoraInhumacion,
                        Localidad,
                        NombreLocalidad,
                        OtroCementerioCrematorio,
                        Sala,
                        NombreSala,
                        FechaMisa,
                        HoraMisa,
                        IglesiaId,
                        NombreIglesia,
                        OtroLugarMisa,
                        LugarInhumacion,
                        NombreLugarInhumacion,
                        FechaNacimiento,
                        OpcionInhumacionCremacion,
                        LugarCremacion,
                        NombreLugarCremacion,
                        NombreOtraSala,
                        DomicilioOtraSala,
                        IdOracion,
                        NombreOracion,
                        ContenidoOracion,
                        IdCocheria,
                        DomicilioSala});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ActualizarSepelioAsync(
                    string Nombre, 
                    System.DateTime FechaFallecimiento, 
                    System.DateTime FechaSepelio, 
                    string HoraInhumacion, 
                    int Localidad, 
                    string NombreLocalidad, 
                    string OtroCementerioCrematorio, 
                    int Sala, 
                    string NombreSala, 
                    System.DateTime FechaMisa, 
                    string HoraMisa, 
                    int IglesiaId, 
                    string NombreIglesia, 
                    string OtroLugarMisa, 
                    int LugarInhumacion, 
                    string NombreLugarInhumacion, 
                    System.DateTime FechaNacimiento, 
                    int OpcionInhumacionCremacion, 
                    int LugarCremacion, 
                    string NombreLugarCremacion, 
                    string NombreOtraSala, 
                    string DomicilioOtraSala, 
                    int IdOracion, 
                    string NombreOracion, 
                    string ContenidoOracion, 
                    int IdCocheria, 
                    string DomicilioSala) {
            this.ActualizarSepelioAsync(Nombre, FechaFallecimiento, FechaSepelio, HoraInhumacion, Localidad, NombreLocalidad, OtroCementerioCrematorio, Sala, NombreSala, FechaMisa, HoraMisa, IglesiaId, NombreIglesia, OtroLugarMisa, LugarInhumacion, NombreLugarInhumacion, FechaNacimiento, OpcionInhumacionCremacion, LugarCremacion, NombreLugarCremacion, NombreOtraSala, DomicilioOtraSala, IdOracion, NombreOracion, ContenidoOracion, IdCocheria, DomicilioSala, null);
        }
        
        /// <remarks/>
        public void ActualizarSepelioAsync(
                    string Nombre, 
                    System.DateTime FechaFallecimiento, 
                    System.DateTime FechaSepelio, 
                    string HoraInhumacion, 
                    int Localidad, 
                    string NombreLocalidad, 
                    string OtroCementerioCrematorio, 
                    int Sala, 
                    string NombreSala, 
                    System.DateTime FechaMisa, 
                    string HoraMisa, 
                    int IglesiaId, 
                    string NombreIglesia, 
                    string OtroLugarMisa, 
                    int LugarInhumacion, 
                    string NombreLugarInhumacion, 
                    System.DateTime FechaNacimiento, 
                    int OpcionInhumacionCremacion, 
                    int LugarCremacion, 
                    string NombreLugarCremacion, 
                    string NombreOtraSala, 
                    string DomicilioOtraSala, 
                    int IdOracion, 
                    string NombreOracion, 
                    string ContenidoOracion, 
                    int IdCocheria, 
                    string DomicilioSala, 
                    object userState) {
            if ((this.ActualizarSepelioOperationCompleted == null)) {
                this.ActualizarSepelioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActualizarSepelioOperationCompleted);
            }
            this.InvokeAsync("ActualizarSepelio", new object[] {
                        Nombre,
                        FechaFallecimiento,
                        FechaSepelio,
                        HoraInhumacion,
                        Localidad,
                        NombreLocalidad,
                        OtroCementerioCrematorio,
                        Sala,
                        NombreSala,
                        FechaMisa,
                        HoraMisa,
                        IglesiaId,
                        NombreIglesia,
                        OtroLugarMisa,
                        LugarInhumacion,
                        NombreLugarInhumacion,
                        FechaNacimiento,
                        OpcionInhumacionCremacion,
                        LugarCremacion,
                        NombreLugarCremacion,
                        NombreOtraSala,
                        DomicilioOtraSala,
                        IdOracion,
                        NombreOracion,
                        ContenidoOracion,
                        IdCocheria,
                        DomicilioSala}, this.ActualizarSepelioOperationCompleted, userState);
        }
        
        private void OnActualizarSepelioOperationCompleted(object arg) {
            if ((this.ActualizarSepelioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActualizarSepelioCompleted(this, new ActualizarSepelioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GenerarTicketCompletedEventHandler(object sender, GenerarTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerarTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerarTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CrearSepelioCompletedEventHandler(object sender, CrearSepelioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CrearSepelioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CrearSepelioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ActualizarSepelioCompletedEventHandler(object sender, ActualizarSepelioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActualizarSepelioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActualizarSepelioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591