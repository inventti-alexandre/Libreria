//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LaPaz.Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LaPazEntities : DbContext
    {
        public LaPazEntities()
            : base("name=LaPazEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<EstadosCliente> EstadosClientes { get; set; }
        public virtual DbSet<Profesion> Profesiones { get; set; }
        public virtual DbSet<Provincia> Provincias { get; set; }
        public virtual DbSet<Proveedor> Proveedors { get; set; }
        public virtual DbSet<Localidad> Localidades { get; set; }
        public virtual DbSet<CondicionCompra> CondicionesCompras { get; set; }
        public virtual DbSet<GruposProveedor> GruposProveedores { get; set; }
        public virtual DbSet<ProveedorBanco> ProveedoresBancos { get; set; }
        public virtual DbSet<Banco> Bancos { get; set; }
        public virtual DbSet<Operador> Operadores { get; set; }
        public virtual DbSet<OperadorSucursal> OperadorSucursales { get; set; }
        public virtual DbSet<Sucursal> Sucursales { get; set; }
        public virtual DbSet<Titulo> Titulos { get; set; }
        public virtual DbSet<Editorial> Editorials { get; set; }
        public virtual DbSet<EstadosTitulo> EstadosTituloes { get; set; }
        public virtual DbSet<Idioma> Idiomas { get; set; }
        public virtual DbSet<Pais> Paises { get; set; }
        public virtual DbSet<SubTema> SubTemas { get; set; }
        public virtual DbSet<Tema> Temas { get; set; }
        public virtual DbSet<TiposTitulo> TiposTitulos { get; set; }
        public virtual DbSet<TituloPresentacion> TituloPresentacions { get; set; }
        public virtual DbSet<TitulosAdicional> TitulosAdicionals { get; set; }
        public virtual DbSet<TitulosModoStock> TitulosModoStocks { get; set; }
        public virtual DbSet<TitulosParte> TitulosPartes { get; set; }
        public virtual DbSet<TitulosUnico> TitulosUnicos { get; set; }
        public virtual DbSet<TomosTitulo> TomosTitulos { get; set; }
        public virtual DbSet<Ubicacion> Ubicacions { get; set; }
        public virtual DbSet<Unidad> Unidads { get; set; }
        public virtual DbSet<CondicionesVenta> CondicionesVentas { get; set; }
        public virtual DbSet<TiposDocumentosIdentidad> TiposDocumentosIdentidads { get; set; }
        public virtual DbSet<Especialidad> Especialidads { get; set; }
        public virtual DbSet<VentaConvenio> VentasConvenios { get; set; }
        public virtual DbSet<Venta> Ventas { get; set; }
        public virtual DbSet<VentaDetalle> VentasDetalles { get; set; }
        public virtual DbSet<VentaPendientEntrega> VentasPendientesEntregas { get; set; }
        public virtual DbSet<VentaReservada> VentasReservadas { get; set; }
        public virtual DbSet<Caja> Cajas { get; set; }
        public virtual DbSet<CajaMovimiento> CajasMovimientos { get; set; }
        public virtual DbSet<Tarjeta> Tarjetas { get; set; }
        public virtual DbSet<ChequesTercero> ChequesTerceros { get; set; }
        public virtual DbSet<ClientesMovimiento> ClientesMovimientoes { get; set; }
        public virtual DbSet<LoteFactura> LotesFacturas { get; set; }
        public virtual DbSet<Recibo> Recibos { get; set; }
        public virtual DbSet<RecibosDetalle> RecibosDetalles { get; set; }
        public virtual DbSet<TarjetasMovimiento> TarjetasMovimientos { get; set; }
        public virtual DbSet<TipoComprobante> TipoComprobantes { get; set; }
        public virtual DbSet<ClienteMontoFavor> ClienteMontoFavors { get; set; }
        public virtual DbSet<ClienteCuentaCorriente> ClientesCuentasCorrientes { get; set; }
        public virtual DbSet<TituloStock> TituloStocks { get; set; }
        public virtual DbSet<TiposMovimientosCaja> TiposMovimientosCajas { get; set; }
        public virtual DbSet<EstadoVenta> EstadoVentas { get; set; }
        public virtual DbSet<Compra> Compras { get; set; }
        public virtual DbSet<ComprasDetalle> ComprasDetalles { get; set; }
        public virtual DbSet<FacturasCompra> FacturasCompras { get; set; }
        public virtual DbSet<FacturasComprasDetalle> FacturasComprasDetalles { get; set; }
        public virtual DbSet<OrdenesPagoComprobante> OrdenesPagoComprobantes { get; set; }
        public virtual DbSet<OrdenesPagoDetalle> OrdenesPagoDetalles { get; set; }
        public virtual DbSet<OrdenPagoCheque> OrdenPagoCheques { get; set; }
        public virtual DbSet<OrdenesPago> OrdenesPagos { get; set; }
        public virtual DbSet<CentrosCosto> CentrosCostos { get; set; }
        public virtual DbSet<ProveedoresCuentasCorriente> ProveedoresCuentasCorrientes { get; set; }
        public virtual DbSet<TiposGasto> TiposGastos { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<TitulosConsignacion> TitulosConsignacions { get; set; }
        public virtual DbSet<TitulosConsignacionesVendida> TitulosConsignacionesVendidas { get; set; }
        public virtual DbSet<Personal> Personales { get; set; }
        public virtual DbSet<Funcion> Funcions { get; set; }
        public virtual DbSet<OperadoresFuncione> OperadoresFunciones { get; set; }
        public virtual DbSet<Autor> Autors { get; set; }
        public virtual DbSet<ClientesMontosFavorDetalle> ClientesMontosFavorDetalles { get; set; }
        public virtual DbSet<ProveedorSenia> ProveedorSenias { get; set; }
        public virtual DbSet<CuentasMovimiento> CuentasMovimientos { get; set; }
        public virtual DbSet<TiposCuenta> TiposCuentas { get; set; }
        public virtual DbSet<Transferencia> Transferencias { get; set; }
        public virtual DbSet<TransferenciasDetalle> TransferenciasDetalles { get; set; }
        public virtual DbSet<EstadosLoteFactura> EstadosLoteFactura { get; set; }
        public virtual DbSet<BancoPropio> BancoPropios { get; set; }
        public virtual DbSet<Presupuestos> Presupuestos { get; set; }
        public virtual DbSet<PresupuestosDetalle> PresupuestosDetalle { get; set; }
        public virtual DbSet<Cuenta> Cuentas { get; set; }
        public virtual DbSet<RemitosCompra> RemitosCompras { get; set; }
        public virtual DbSet<RemitosCompraDetalle> RemitosCompraDetalles { get; set; }
        public virtual DbSet<TituloConsignacionRendida> TituloConsignacionRendidas { get; set; }
        public virtual DbSet<TituloConsignacionRendidasDetalle> TituloConsignacionRendidasDetalles { get; set; }
        public virtual DbSet<RemitosVentaDetalle> RemitosVentaDetalles { get; set; }
        public virtual DbSet<RemitosVenta> RemitosVentas { get; set; }
        public virtual DbSet<ProveedoresPago> ProveedoresPagos { get; set; }
        public virtual DbSet<ProveedoresPagosDetalle> ProveedoresPagosDetalles { get; set; }
        public virtual DbSet<C__RefactorLog> C__RefactorLog { get; set; }
        public virtual DbSet<Alumno> Alumnos { get; set; }
        public virtual DbSet<Aplicacion> Aplicacions { get; set; }
        public virtual DbSet<AplicacionFuncione> AplicacionFunciones { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<Auditoria> Auditorias { get; set; }
        public virtual DbSet<AuditoriasDetalle> AuditoriasDetalles { get; set; }
        public virtual DbSet<CategoriasOperadore> CategoriasOperadores { get; set; }
        public virtual DbSet<ClientesArchivo> ClientesArchivos { get; set; }
        public virtual DbSet<ClientesSuscripcione> ClientesSuscripciones { get; set; }
        public virtual DbSet<Cobradore> Cobradores { get; set; }
        public virtual DbSet<CobradoresFactura> CobradoresFacturas { get; set; }
        public virtual DbSet<CobradoresRecibo> CobradoresRecibos { get; set; }
        public virtual DbSet<Concepto> Conceptos { get; set; }
        public virtual DbSet<CondicionesIVA> CondicionesIVAs { get; set; }
        public virtual DbSet<Contacto> Contactos { get; set; }
        public virtual DbSet<Convenio> Convenios { get; set; }
        public virtual DbSet<Estado> Estadoes { get; set; }
        public virtual DbSet<EstadosCompra> EstadosCompras { get; set; }
        public virtual DbSet<EstadosMovimientoBancario> EstadosMovimientoBancarios { get; set; }
        public virtual DbSet<EstadosRemito> EstadosRemitoes { get; set; }
        public virtual DbSet<GruposTitulo> GruposTitulos { get; set; }
        public virtual DbSet<Liquidacione> Liquidaciones { get; set; }
        public virtual DbSet<LiquidacionPersonal> LiquidacionPersonals { get; set; }
        public virtual DbSet<Moneda> Monedas { get; set; }
        public virtual DbSet<MovimientosFondo> MovimientosFondoes { get; set; }
        public virtual DbSet<Mutuale> Mutuales { get; set; }
        public virtual DbSet<MutualesLiquidacion> MutualesLiquidacions { get; set; }
        public virtual DbSet<MutualesMovimiento> MutualesMovimientos { get; set; }
        public virtual DbSet<NotasDeVenta> NotasDeVentas { get; set; }
        public virtual DbSet<NotasDeVentaDetalle> NotasDeVentaDetalles { get; set; }
        public virtual DbSet<NovedadesOperador> NovedadesOperadors { get; set; }
        public virtual DbSet<Numeradore> Numeradores { get; set; }
        public virtual DbSet<Parametro> Parametros { get; set; }
        public virtual DbSet<Pedido> Pedidos { get; set; }
        public virtual DbSet<PedidosDetalle> PedidosDetalles { get; set; }
        public virtual DbSet<PersonalConcepto> PersonalConceptoes { get; set; }
        public virtual DbSet<PersonalNovedade> PersonalNovedades { get; set; }
        public virtual DbSet<PreVenta> PreVentas { get; set; }
        public virtual DbSet<ProveedoresBulto> ProveedoresBultos { get; set; }
        public virtual DbSet<ProveedoresTitulo> ProveedoresTitulos { get; set; }
        public virtual DbSet<RegistrosExportacione> RegistrosExportaciones { get; set; }
        public virtual DbSet<RegistrosImportacione> RegistrosImportaciones { get; set; }
        public virtual DbSet<REP_VTAS_CTES> REP_VTAS_CTES { get; set; }
        public virtual DbSet<Revista> Revistas { get; set; }
        public virtual DbSet<s00CajasSaldo> s00CajasSaldo { get; set; }
        public virtual DbSet<s00Entidades> s00Entidades { get; set; }
        public virtual DbSet<s00SucCnExp> s00SucCnExp { get; set; }
        public virtual DbSet<s00SueLiqOpeRec> s00SueLiqOpeRec { get; set; }
        public virtual DbSet<s00SueNove> s00SueNove { get; set; }
        public virtual DbSet<SubEspecialidade> SubEspecialidades { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TarjetasLiquidacion> TarjetasLiquidacions { get; set; }
        public virtual DbSet<TempComparacionStock> TempComparacionStocks { get; set; }
        public virtual DbSet<TempLibroIva> TempLibroIvas { get; set; }
        public virtual DbSet<TiposConsignacione> TiposConsignaciones { get; set; }
        public virtual DbSet<TiposMoneda> TiposMonedas { get; set; }
        public virtual DbSet<TiposMovimientoBancario> TiposMovimientoBancarios { get; set; }
        public virtual DbSet<TiposMovimientoFondo> TiposMovimientoFondoes { get; set; }
        public virtual DbSet<TiposRemito> TiposRemitos { get; set; }
        public virtual DbSet<TitulosConvenio> TitulosConvenios { get; set; }
        public virtual DbSet<TitulosMovimiento> TitulosMovimientoes { get; set; }
        public virtual DbSet<TitulosStockAuditado> TitulosStockAuditadoes { get; set; }
        public virtual DbSet<TitulosUbicacion> TitulosUbicacions { get; set; }
        public virtual DbSet<Transporte> Transportes { get; set; }
        public virtual DbSet<Vale> Vales { get; set; }
        public virtual DbSet<Vendedore> Vendedores { get; set; }
        public virtual DbSet<Zona> Zonas { get; set; }
        public virtual DbSet<DuplicadosTitulosStock> DuplicadosTitulosStocks { get; set; }
        public virtual DbSet<DuplicadosTitulosStockAuditado> DuplicadosTitulosStockAuditadoes { get; set; }
        public virtual DbSet<MovimientosFondoDetalle> MovimientosFondoDetalles { get; set; }
        public virtual DbSet<PRECIOSACT> PRECIOSACTs { get; set; }
        public virtual DbSet<PRECIOSACT2> PRECIOSACT2 { get; set; }
        public virtual DbSet<ProveedoresMontosFavorDetalle> ProveedoresMontosFavorDetalles { get; set; }
        public virtual DbSet<ProveedoresMontosFavor> ProveedoresMontosFavors { get; set; }
        public virtual DbSet<Comentario> Comentarios { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<rolesCtaCte> rolesCtaCtes { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<TitulosConsignacionesDevuelta> TitulosConsignacionesDevueltas { get; set; }
        public virtual DbSet<TitulosConsignacionesDevueltasDetalle> TitulosConsignacionesDevueltasDetalles { get; set; }
    
        public virtual ObjectResult<SP_GenerarFacturaByVentaId_Result> SP_GenerarFacturaByVentaId(Nullable<System.Guid> ventaId)
        {
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("ventaId", ventaId) :
                new ObjectParameter("ventaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GenerarFacturaByVentaId_Result>("SP_GenerarFacturaByVentaId", ventaIdParameter);
        }
    
        public virtual ObjectResult<RptInformeCajaRow> ReporteInformeCaja(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptInformeCajaRow>("ReporteInformeCaja", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter);
        }
    
        public virtual ObjectResult<ReporteCajaResumidaComposicion> ReporteCajaResumidaComposicionEgresos(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteCajaResumidaComposicion>("ReporteCajaResumidaComposicionEgresos", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter);
        }
    
        public virtual ObjectResult<ReporteCajaResumidaComposicion> ReporteCajaResumidaComposicionIngresos(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteCajaResumidaComposicion>("ReporteCajaResumidaComposicionIngresos", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter);
        }
    
        public virtual ObjectResult<ReporteCajaResumidaIngresosEgreso> ReporteCajaResumidaEgresos(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteCajaResumidaIngresosEgreso>("ReporteCajaResumidaEgresos", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter);
        }
    
        public virtual ObjectResult<ReporteCajaResumidaIngresosEgreso> ReporteCajaResumidaIngresos(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteCajaResumidaIngresosEgreso>("ReporteCajaResumidaIngresos", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter);
        }
    
        public virtual ObjectResult<ReporteCajaResumidaVentasRow> ReporteCajaResumidaVentas(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteCajaResumidaVentasRow>("ReporteCajaResumidaVentas", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter);
        }
    
        public virtual ObjectResult<RptTarjetasChequesYDepositosRow> ReporteTarjetasChequesYDepositos(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptTarjetasChequesYDepositosRow>("ReporteTarjetasChequesYDepositos", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter);
        }
    
        public virtual ObjectResult<TituloDto> TitulosListado(string columnaParaOrdenar, Nullable<int> codigoProveedor, string codigoLibroCompleto, string iSBN, string codigoBarra, string tituloNombre, Nullable<System.Guid> proveedorId, Nullable<int> temaId, string autorNombre, Nullable<int> editorialId, Nullable<bool> conStock, Nullable<int> sucursalId, Nullable<bool> ochoDeMarzo, Nullable<bool> activos, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var columnaParaOrdenarParameter = columnaParaOrdenar != null ?
                new ObjectParameter("ColumnaParaOrdenar", columnaParaOrdenar) :
                new ObjectParameter("ColumnaParaOrdenar", typeof(string));
    
            var codigoProveedorParameter = codigoProveedor.HasValue ?
                new ObjectParameter("CodigoProveedor", codigoProveedor) :
                new ObjectParameter("CodigoProveedor", typeof(int));
    
            var codigoLibroCompletoParameter = codigoLibroCompleto != null ?
                new ObjectParameter("CodigoLibroCompleto", codigoLibroCompleto) :
                new ObjectParameter("CodigoLibroCompleto", typeof(string));
    
            var iSBNParameter = iSBN != null ?
                new ObjectParameter("ISBN", iSBN) :
                new ObjectParameter("ISBN", typeof(string));
    
            var codigoBarraParameter = codigoBarra != null ?
                new ObjectParameter("CodigoBarra", codigoBarra) :
                new ObjectParameter("CodigoBarra", typeof(string));
    
            var tituloNombreParameter = tituloNombre != null ?
                new ObjectParameter("TituloNombre", tituloNombre) :
                new ObjectParameter("TituloNombre", typeof(string));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(System.Guid));
    
            var temaIdParameter = temaId.HasValue ?
                new ObjectParameter("TemaId", temaId) :
                new ObjectParameter("TemaId", typeof(int));
    
            var autorNombreParameter = autorNombre != null ?
                new ObjectParameter("AutorNombre", autorNombre) :
                new ObjectParameter("AutorNombre", typeof(string));
    
            var editorialIdParameter = editorialId.HasValue ?
                new ObjectParameter("EditorialId", editorialId) :
                new ObjectParameter("EditorialId", typeof(int));
    
            var conStockParameter = conStock.HasValue ?
                new ObjectParameter("ConStock", conStock) :
                new ObjectParameter("ConStock", typeof(bool));
    
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var ochoDeMarzoParameter = ochoDeMarzo.HasValue ?
                new ObjectParameter("OchoDeMarzo", ochoDeMarzo) :
                new ObjectParameter("OchoDeMarzo", typeof(bool));
    
            var activosParameter = activos.HasValue ?
                new ObjectParameter("Activos", activos) :
                new ObjectParameter("Activos", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TituloDto>("TitulosListado", columnaParaOrdenarParameter, codigoProveedorParameter, codigoLibroCompletoParameter, iSBNParameter, codigoBarraParameter, tituloNombreParameter, proveedorIdParameter, temaIdParameter, autorNombreParameter, editorialIdParameter, conStockParameter, sucursalIdParameter, ochoDeMarzoParameter, activosParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<SP_ClienteMontoFavorByLCN_Result> SP_ClienteMontoFavorByLCN(string lcn)
        {
            var lcnParameter = lcn != null ?
                new ObjectParameter("lcn", lcn) :
                new ObjectParameter("lcn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ClienteMontoFavorByLCN_Result>("SP_ClienteMontoFavorByLCN", lcnParameter);
        }
    
        public virtual ObjectResult<ReporteConsignacionesVendidasRow> ReporteConsignacionesVendidas(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> proveedorId, Nullable<System.Guid> operadorId, Nullable<int> codProveedor)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(System.Guid));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            var codProveedorParameter = codProveedor.HasValue ?
                new ObjectParameter("CodProveedor", codProveedor) :
                new ObjectParameter("CodProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteConsignacionesVendidasRow>("ReporteConsignacionesVendidas", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, proveedorIdParameter, operadorIdParameter, codProveedorParameter);
        }
    
        public virtual ObjectResult<ReporteCajaResumidaComposicion> ReporteCajaResumidaComposicionVentas(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteCajaResumidaComposicion>("ReporteCajaResumidaComposicionVentas", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter);
        }
    
        public virtual ObjectResult<RptInformeCajaRow> ReporteMovimientosCajaAnterior(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptInformeCajaRow>("ReporteMovimientosCajaAnterior", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter);
        }
    
        public virtual ObjectResult<SP_PresupuestoById_Result> SP_PresupuestoById(Nullable<System.Guid> presupuestoId)
        {
            var presupuestoIdParameter = presupuestoId.HasValue ?
                new ObjectParameter("presupuestoId", presupuestoId) :
                new ObjectParameter("presupuestoId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PresupuestoById_Result>("SP_PresupuestoById", presupuestoIdParameter);
        }
    
        public virtual ObjectResult<ReporteVentasRow> ReporteVentas(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId, Nullable<int> temaId, Nullable<int> editorialId, Nullable<System.Guid> proveedorId, Nullable<bool> conStockConsignado, Nullable<bool> conStockPropio)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            var temaIdParameter = temaId.HasValue ?
                new ObjectParameter("TemaId", temaId) :
                new ObjectParameter("TemaId", typeof(int));
    
            var editorialIdParameter = editorialId.HasValue ?
                new ObjectParameter("EditorialId", editorialId) :
                new ObjectParameter("EditorialId", typeof(int));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(System.Guid));
    
            var conStockConsignadoParameter = conStockConsignado.HasValue ?
                new ObjectParameter("ConStockConsignado", conStockConsignado) :
                new ObjectParameter("ConStockConsignado", typeof(bool));
    
            var conStockPropioParameter = conStockPropio.HasValue ?
                new ObjectParameter("ConStockPropio", conStockPropio) :
                new ObjectParameter("ConStockPropio", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteVentasRow>("ReporteVentas", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter, temaIdParameter, editorialIdParameter, proveedorIdParameter, conStockConsignadoParameter, conStockPropioParameter);
        }
    
        public virtual ObjectResult<SP_PresupuestoById1_Result> SP_PresupuestoById1(Nullable<System.Guid> presupuestoId)
        {
            var presupuestoIdParameter = presupuestoId.HasValue ?
                new ObjectParameter("presupuestoId", presupuestoId) :
                new ObjectParameter("presupuestoId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PresupuestoById1_Result>("SP_PresupuestoById1", presupuestoIdParameter);
        }
    
        public virtual ObjectResult<ReporteAutorTitulosListado> ReporteAutorTitulosListado(Nullable<int> codigoProveedor, string codigoLibroCompleto, string iSBN, string codigoBarra, string tituloNombre, Nullable<System.Guid> proveedorId, Nullable<int> temaId, string autorNombre, Nullable<int> editorialId, Nullable<bool> conStock, Nullable<int> sucursalId, Nullable<bool> ochoDeMarzo)
        {
            var codigoProveedorParameter = codigoProveedor.HasValue ?
                new ObjectParameter("CodigoProveedor", codigoProveedor) :
                new ObjectParameter("CodigoProveedor", typeof(int));
    
            var codigoLibroCompletoParameter = codigoLibroCompleto != null ?
                new ObjectParameter("CodigoLibroCompleto", codigoLibroCompleto) :
                new ObjectParameter("CodigoLibroCompleto", typeof(string));
    
            var iSBNParameter = iSBN != null ?
                new ObjectParameter("ISBN", iSBN) :
                new ObjectParameter("ISBN", typeof(string));
    
            var codigoBarraParameter = codigoBarra != null ?
                new ObjectParameter("CodigoBarra", codigoBarra) :
                new ObjectParameter("CodigoBarra", typeof(string));
    
            var tituloNombreParameter = tituloNombre != null ?
                new ObjectParameter("TituloNombre", tituloNombre) :
                new ObjectParameter("TituloNombre", typeof(string));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(System.Guid));
    
            var temaIdParameter = temaId.HasValue ?
                new ObjectParameter("TemaId", temaId) :
                new ObjectParameter("TemaId", typeof(int));
    
            var autorNombreParameter = autorNombre != null ?
                new ObjectParameter("AutorNombre", autorNombre) :
                new ObjectParameter("AutorNombre", typeof(string));
    
            var editorialIdParameter = editorialId.HasValue ?
                new ObjectParameter("EditorialId", editorialId) :
                new ObjectParameter("EditorialId", typeof(int));
    
            var conStockParameter = conStock.HasValue ?
                new ObjectParameter("ConStock", conStock) :
                new ObjectParameter("ConStock", typeof(bool));
    
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var ochoDeMarzoParameter = ochoDeMarzo.HasValue ?
                new ObjectParameter("OchoDeMarzo", ochoDeMarzo) :
                new ObjectParameter("OchoDeMarzo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteAutorTitulosListado>("ReporteAutorTitulosListado", codigoProveedorParameter, codigoLibroCompletoParameter, iSBNParameter, codigoBarraParameter, tituloNombreParameter, proveedorIdParameter, temaIdParameter, autorNombreParameter, editorialIdParameter, conStockParameter, sucursalIdParameter, ochoDeMarzoParameter);
        }
    
        public virtual ObjectResult<ConsignacionSinRendir> ConsignacionesVentasSinRendir(Nullable<System.Guid> proveedorId, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> sucursalId)
        {
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(System.Guid));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsignacionSinRendir>("ConsignacionesVentasSinRendir", proveedorIdParameter, desdeParameter, hastaParameter, sucursalIdParameter);
        }
    
        public virtual ObjectResult<ReporteClientesPorTitulo> ReporteClientesPorTitulos(Nullable<System.Guid> tituloId, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> sucursalId)
        {
            var tituloIdParameter = tituloId.HasValue ?
                new ObjectParameter("TituloId", tituloId) :
                new ObjectParameter("TituloId", typeof(System.Guid));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteClientesPorTitulo>("ReporteClientesPorTitulos", tituloIdParameter, fechaDesdeParameter, fechaHastaParameter, sucursalIdParameter);
        }
    
        public virtual ObjectResult<ReporteMultiRanking> ReporteMultiRanking(string tipoRanking, Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> cantidadFilas, Nullable<bool> muestraCantidad, string tituloISBN, Nullable<System.Guid> proveedorId, Nullable<int> temaId)
        {
            var tipoRankingParameter = tipoRanking != null ?
                new ObjectParameter("TipoRanking", tipoRanking) :
                new ObjectParameter("TipoRanking", typeof(string));
    
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var cantidadFilasParameter = cantidadFilas.HasValue ?
                new ObjectParameter("CantidadFilas", cantidadFilas) :
                new ObjectParameter("CantidadFilas", typeof(int));
    
            var muestraCantidadParameter = muestraCantidad.HasValue ?
                new ObjectParameter("MuestraCantidad", muestraCantidad) :
                new ObjectParameter("MuestraCantidad", typeof(bool));
    
            var tituloISBNParameter = tituloISBN != null ?
                new ObjectParameter("TituloISBN", tituloISBN) :
                new ObjectParameter("TituloISBN", typeof(string));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(System.Guid));
    
            var temaIdParameter = temaId.HasValue ?
                new ObjectParameter("TemaId", temaId) :
                new ObjectParameter("TemaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteMultiRanking>("ReporteMultiRanking", tipoRankingParameter, sucursalIdParameter, fechaInicioParameter, fechaFinParameter, cantidadFilasParameter, muestraCantidadParameter, tituloISBNParameter, proveedorIdParameter, temaIdParameter);
        }
    
        public virtual ObjectResult<ConsignacionesParaDevolver> ConsignacionesParaDevolver(Nullable<System.Guid> proveedorId, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(System.Guid));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsignacionesParaDevolver>("ConsignacionesParaDevolver", proveedorIdParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<ReciboConsignacion> ReciboConsignacion(Nullable<System.Guid> consignacionId)
        {
            var consignacionIdParameter = consignacionId.HasValue ?
                new ObjectParameter("ConsignacionId", consignacionId) :
                new ObjectParameter("ConsignacionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReciboConsignacion>("ReciboConsignacion", consignacionIdParameter);
        }
    
        public virtual ObjectResult<Reporte_Proveedor_General_Result> Reporte_Proveedor_General(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId, Nullable<System.Guid> proveedorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_Proveedor_General_Result>("Reporte_Proveedor_General", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter, proveedorIdParameter);
        }
    
        public virtual ObjectResult<Reporte_Proveedor_General_Pagos_Result> Reporte_Proveedor_General_Pagos(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId, Nullable<System.Guid> proveedorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_Proveedor_General_Pagos_Result>("Reporte_Proveedor_General_Pagos", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter, proveedorIdParameter);
        }
    
        public virtual ObjectResult<Reporte_Proveedor_General_AFavor_Result> Reporte_Proveedor_General_AFavor(Nullable<int> sucursalId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.Guid> operadorId, Nullable<System.Guid> proveedorId)
        {
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var operadorIdParameter = operadorId.HasValue ?
                new ObjectParameter("OperadorId", operadorId) :
                new ObjectParameter("OperadorId", typeof(System.Guid));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_Proveedor_General_AFavor_Result>("Reporte_Proveedor_General_AFavor", sucursalIdParameter, fechaInicioParameter, fechaFinParameter, operadorIdParameter, proveedorIdParameter);
        }
    
        public virtual ObjectResult<HistorialPagos_Result> HistorialPagos(Nullable<System.Guid> compraId, Nullable<System.Guid> proveedorId)
        {
            var compraIdParameter = compraId.HasValue ?
                new ObjectParameter("compraId", compraId) :
                new ObjectParameter("compraId", typeof(System.Guid));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("proveedorId", proveedorId) :
                new ObjectParameter("proveedorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HistorialPagos_Result>("HistorialPagos", compraIdParameter, proveedorIdParameter);
        }
    
        public virtual ObjectResult<Sp_DevolucionLibros_Result> Sp_DevolucionLibros(Nullable<System.Guid> devolucionId)
        {
            var devolucionIdParameter = devolucionId.HasValue ?
                new ObjectParameter("devolucionId", devolucionId) :
                new ObjectParameter("devolucionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DevolucionLibros_Result>("Sp_DevolucionLibros", devolucionIdParameter);
        }
    
        public virtual ObjectResult<ProveedoresMovimientos_Result> ProveedoresMovimientos(Nullable<System.Guid> proveedor, Nullable<int> sucursalId)
        {
            var proveedorParameter = proveedor.HasValue ?
                new ObjectParameter("Proveedor", proveedor) :
                new ObjectParameter("Proveedor", typeof(System.Guid));
    
            var sucursalIdParameter = sucursalId.HasValue ?
                new ObjectParameter("SucursalId", sucursalId) :
                new ObjectParameter("SucursalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProveedoresMovimientos_Result>("ProveedoresMovimientos", proveedorParameter, sucursalIdParameter);
        }
    
        public virtual ObjectResult<Reporte_HistorialLibro_Result> Reporte_HistorialLibro(Nullable<System.Guid> tituloId)
        {
            var tituloIdParameter = tituloId.HasValue ?
                new ObjectParameter("tituloId", tituloId) :
                new ObjectParameter("tituloId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_HistorialLibro_Result>("Reporte_HistorialLibro", tituloIdParameter);
        }
    }
}
